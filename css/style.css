/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* -- star is universal selector select each and every element on the page all applay the declarations */
/* -- box sizing is to change the box model, so thant the borders and the paddings are no longer added 
to total width or total height than we specify for a box*/

* {   
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/*-- fort-family is parient element in body and all other child elements inherit it*/
/*-- padding: 30px -- white space arout the page */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777; 
    padding: 30px; 
}

/*-- 95vh -- means, that every point the height of the box of his element should be 95% of the viewport height.
If we put 100vh, element would be exactly the same height as the viewport (white space will in the end of page).*/
/*-- background-size: cover -- means, that whateverthe width of the viewport, or the element,it'll always try to fit 
the element inside pf the box.*/
/*--background-position: top-- backgroud image top stays the same , when you changing page size, the same 
we can with bottom* and center*/
/* --linear-gradient(to right bottom,  -- gradient goes to from left to the right buttom conner*/
/* -- clip-path:polygon(  -- we spacify a polygon in wihch the image, o element, will still be wisible; 
x,y starts from top left conner and finishes at the bottom left conner. For every conner we should specify 
codinates.  75vh (75% viewport hight). If we change viewport hight it will change dinamically */
/* --position: relative  it is reference from which .logo-box, top and left will count */

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)),
        url("../img/hero.jpg.");
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

/*--width will automatically figured out by a browser */
.logo {
    height: 35px;  
}

/*
.logo:hover {
    animation: moveInRight 1s ease-out; it will happens as soon it logo will be hover
}
*/

/*-- sent text-boxt in a center use position: absolute; --*/
/*-- top and left 50% it's from top to  the text-box starts, the same with left size it is not exectlly in center--*/
/*--top 40% -- because we need text-box a little bit heigher*/
/*-- transform: translate(-50%, -50%) helps to finish text-box centering --*/
.text-box {
    position: absolute;
    top: 40%;
    left: 50%;    
    transform: translate(-50%, -50%);
}

/*--backface-visibility: hidden;-- use for fixing text (entire element .heading-primary moves when animation 
property is using*/ 
.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; 
}

/*--display:block breaks create lines breaks after and before */
/*--animation-timing-function:-- define how animation will proceed;*//*ease-in - star quickly and slover at th end, 
ease-out - starts slow, faster at the end*/

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    
    animation-name: moveInLeft;  /*name of animation*/
    animation-duration: 1s;  /*time the animation should take*/
    animation-timing-function: ease-out;
    
    /*animation-iteration-count: 3;*/ /*animation happens 3 time*/
    /*animation-delay: 3s;*/ /*before animation starts to play will first wait 3 seconds */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out; /*all properties write in one line*/

}

/*--specify every time of animation 0% - the animation actually starts (initial staty), 
100% - when animation finish (final state) */ 
/* -- transform: rotate(120deg); -- when we want rotate object */
@keyframes moveInLeft {
    0% {
        opacity: 0; /*animation invisible*/
        transform: translateX(-100px); /*start -100px at the left*/
    }
    
    80% {
        transform: translateX(10px); /*animation goes 10px to right side*/
    }

    100% {
        opacity: 1; /*animation fully visible */
        transform: translate(0); /* how it looks now */
    }    
}

@keyframes moveInRight {
    0% {
        opacity: 0; /*animation invisible*/
        transform: translateX(100px); /*start 100px at the right*/
    }    
    
    80% {
        transform: translateX(-10px); /*animation goes 10px to left side*/
    }

    100% {
        opacity: 1; /*animation fully visible */
        transform: translate(0); /* how it looks now */
    }    
}